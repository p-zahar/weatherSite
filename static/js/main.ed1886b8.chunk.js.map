{"version":3,"sources":["components/logo/logo.jsx","components/header/search/search.jsx","api/positionAPI.js","api/weatherAPI.js","variables/dateVars.js","bll/weatherReducer.js","bll/appReducer.js","components/header/search/searchContainer.js","components/header/header.jsx","components/footer/footer.jsx","pages/mainPage/mainInfo/card/card.jsx","pages/mainPage/mainInfo/mainInfo.jsx","pages/mainPage/mainInfo/mainInfo.container.js","functions/selectWeatherIcon.js","pages/mainPage/weatherImage/weatherImage.jsx","pages/mainPage/weatherImage/weatherImageContainer.js","pages/mainPage/forecast/card/card.jsx","pages/mainPage/forecast/forecast.jsx","pages/mainPage/forecast/forecastContainer.js","components/loading/loading.jsx","pages/mainPage/mainPage.jsx","pages/mainPage/mainPage.container.js","App.js","bll/store.js","index.js","components/footer/footer.module.scss","pages/mainPage/mainInfo/mainInfo.module.scss","pages/mainPage/mainPage.module.scss","components/header/header.module.scss","components/header/search/search.module.scss","pages/mainPage/forecast/card/card.module.scss","components/logo/logo.module.scss","pages/mainPage/weatherImage/weatherImage.module.scss","components/loading/loading.module.scss","pages/mainPage/mainInfo/card/card.module.scss","pages/mainPage/forecast/forecast.module.scss"],"names":["Logo","props","className","displayNone","styles","media","body","join","React","memo","Search","history","useHistory","parsedUrl","queryString","location","search","substr","initialValues","city","validate","values","onSubmit","setSubmitting","push","pathname","day","setSearching","getInf","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","form","input","type","name","onChange","onBlur","value","email","placeholder","disabled","button","src","alt","api","positionAPI","position","axios","get","weatherAPI","sco","lat","lon","days","months","SET_WEATHER","SET_FORECAST","initialState","today","coord","weather","id","main","description","icon","base","temp","feels_like","temp_min","temp_max","pressure","humidity","visibility","wind","speed","deg","clouds","all","dt","sys","country","sunrise","sunset","timezone","cod","forecast","setWeatherSuccess","payload","setForecastSuccess","getWeather","resolve","dispatch","getState","a","state","success","response","data","then","app","getForecast","weatherReducer","action","SET_POSITION","SET_DATE","SET_SEARCHING","SET_INITIALIZED","SET_SCO","SET_CITY","address","date","year","month","daysInMonth","initialized","searching","setPositionSuccess","setDateSuccess","setSco","setInitialized","getPosition","navigator","geolocation","getCurrentPosition","scoForApi","positionForApi","coords","longitude","latitude","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","Address","Components","getDate","d","Date","getDay","getMonth","getFullYear","Promise","reject","appReducer","connect","Header","header","inner","menu","searchWrap","href","link","target","Footer","footer","techInfo","column","menu__link","apis","contacs","Card","content","MainInfo","useState","setParsedUrl","isToday","setIsToday","currentDay","useRef","currentDate","currentMonth","currentYear","useEffect","indexOf","current","i","time","tempWrap","Math","round","list","feelsLike","feelsLikeTemp","feelsLikeTitle","line","cards","window","max","min","compose","withRouter","selectWeatherIcon","WeatherImage","path","image","to","sliderSettings","arrows","infinite","slidesToShow","slidesToScroll","dots","responsive","breakpoint","settings","Forecast","nextDay","nextDate","dayId","wasFirstRender","propsForFirstCard","weatherToday","map","Loading","ldsRoller","MainPage","background","wrapperForLoading","classNames","left","right","todayWeather","replace","trim","render","reducers","combineReducers","store","createStore","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed1886b8.chunk.js","sourcesContent":["// ====================================================\r\n// IMPORTS\r\nimport React from 'react'\r\nimport styles from './logo.module.scss'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Logo = props => {\r\n\t// JSX\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\tprops.displayNone ? [styles.media, styles.body].join(' ') : styles.body\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<span>Zahar's</span>\r\n\t\t\t<span>Weather</span>\r\n\t\t\t<span>App</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Logo)\r\n","// ====================================================\r\n// IMPORTS\r\nimport styles from './search.module.scss'\r\nimport { Formik } from 'formik'\r\nimport { useHistory } from 'react-router'\r\nimport * as queryString from 'querystring'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Search = props => {\r\n\t// Variables\r\n\tconst history = useHistory()\r\n\tconst parsedUrl = queryString.parse(history.location.search.substr(1))\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ city: '' }}\r\n\t\t\t\tvalidate={values => {\r\n\t\t\t\t\tconst errors = {}\r\n\t\t\t\t\treturn errors\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\thistory.push({\r\n\t\t\t\t\t\tpathname: '',\r\n\t\t\t\t\t\tsearch: `day=${+parsedUrl.day}&city=${values.city}`,\r\n\t\t\t\t\t})\r\n\t\t\t\t\tprops.setSearching(true)\r\n\t\t\t\t\tprops.getInf(values.city)\r\n\t\t\t\t\tsetSubmitting(false)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\tisSubmitting,\r\n\t\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit} className={styles.form}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\tplaceholder={'Search your city'}\r\n\t\t\t\t\t\t\t\tclassName={styles.input}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName={styles.button}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<img src=\"/images/common/search.svg\" alt=\"\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default Search\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\nimport axios from 'axios'\r\n\r\n// ====================================================\r\n// Instance\r\n\r\nconst api = {\r\n\tkey: '015dae3c-c221-414b-b6f7-6fd7d747be49',\r\n\tbase: 'https://geocode-maps.yandex.ru/1.x/',\r\n}\r\n\r\n// ====================================================\r\n// Requests\r\n\r\nexport const positionAPI = {\r\n\tgetAddress: position => {\r\n\t\treturn axios.get(\r\n\t\t\t`${api.base}?apikey=${api.key}&geocode=${position}&format=json&lang=en_US`\r\n\t\t)\r\n\t},\r\n}\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\nimport axios from 'axios'\r\n\r\n// ====================================================\r\n// Instance\r\n\r\nconst api = {\r\n\tkey: '08dbab0eeefe53317d2e0ad7c2a2e060',\r\n\tbase: 'https://api.openweathermap.org/data/2.5/',\r\n}\r\n\r\n// ====================================================\r\n// Requests\r\n\r\nexport const weatherAPI = {\r\n\tgetWeatherAPI: sco => {\r\n\t\treturn axios.get(\r\n\t\t\t`${api.base}weather?lat=${sco.lat}&lon=${sco.lon}&units=metric&APPID=${api.key}`\r\n\t\t)\r\n\t},\r\n\tgetForecastAPI: (sco, days) => {\r\n\t\treturn axios.get(\r\n\t\t\t`${api.base}forecast/daily?lat=${sco.lat}&lon=${sco.lon}&cnt=${days}&units=metric&APPID=${api.key}`\r\n\t\t)\r\n\t},\r\n\tgetWeatherWithCityAPI: city => {\r\n\t\treturn axios.get(\r\n\t\t\t`${api.base}weather?q=${city}&units=metric&APPID=${api.key}`\r\n\t\t)\r\n\t},\r\n\tgetForecastWithCityAPI: (city, days) => {\r\n\t\treturn axios.get(\r\n\t\t\t`${api.base}forecast/daily?q=${city}&cnt=${days}&units=metric&APPID=${api.key}`\r\n\t\t)\r\n\t},\r\n}\r\n","export const months = [\r\n\t'January',\r\n\t'February',\r\n\t'March',\r\n\t'April',\r\n\t'May',\r\n\t'June',\r\n\t'July',\r\n\t'August',\r\n\t'September',\r\n\t'October',\r\n\t'November',\r\n\t'December',\r\n]\r\n\r\nexport const days = [\r\n\t'Monday',\r\n\t'Tuesday',\r\n\t'Wednesday',\r\n\t'Thursday',\r\n\t'Friday',\r\n\t'Saturday',\r\n\t'Sunday',\r\n]\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\nimport { weatherAPI } from '../api/weatherAPI'\r\n\r\n// ====================================================\r\n// Types\r\n\r\nconst SET_WEATHER = 'SET_WEATHER'\r\nconst SET_FORECAST = 'SET_FORECAST'\r\n\r\n// ====================================================\r\n// Initial state\r\n\r\nlet initialState = {\r\n\ttoday: {\r\n\t\tcoord: {\r\n\t\t\tlon: null,\r\n\t\t\tlat: null,\r\n\t\t},\r\n\t\tweather: [\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tmain: null,\r\n\t\t\t\tdescription: null,\r\n\t\t\t\ticon: null,\r\n\t\t\t},\r\n\t\t],\r\n\t\tbase: null,\r\n\t\tmain: {\r\n\t\t\ttemp: null,\r\n\t\t\tfeels_like: null,\r\n\t\t\ttemp_min: null,\r\n\t\t\ttemp_max: null,\r\n\t\t\tpressure: null,\r\n\t\t\thumidity: null,\r\n\t\t},\r\n\t\tvisibility: null,\r\n\t\twind: {\r\n\t\t\tspeed: null,\r\n\t\t\tdeg: null,\r\n\t\t},\r\n\t\tclouds: {\r\n\t\t\tall: null,\r\n\t\t},\r\n\t\tdt: null,\r\n\t\tsys: {\r\n\t\t\ttype: null,\r\n\t\t\tid: null,\r\n\t\t\tcountry: null,\r\n\t\t\tsunrise: null,\r\n\t\t\tsunset: null,\r\n\t\t},\r\n\t\ttimezone: null,\r\n\t\tid: null,\r\n\t\tname: null,\r\n\t\tcod: null,\r\n\t},\r\n\tforecast: {},\r\n}\r\n\r\n// ====================================================\r\n// Reducer\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_WEATHER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoday: { ...action.payload },\r\n\t\t\t}\r\n\r\n\t\tcase SET_FORECAST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tforecast: {\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// ====================================================\r\n// Action creators\r\n\r\nexport const setWeatherSuccess = payload => ({ type: SET_WEATHER, payload })\r\nexport const setForecastSuccess = payload => ({\r\n\ttype: SET_FORECAST,\r\n\tpayload,\r\n})\r\n\r\n// ====================================================\r\n// Thunks\r\n\r\nexport const getWeather = (resolve, city = null) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState()\r\n\t\tconst success = response => {\r\n\t\t\tif (resolve) {\r\n\t\t\t\tresolve(dispatch(setWeatherSuccess(response.data)))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setWeatherSuccess(response.data))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcity\r\n\t\t\t? weatherAPI.getWeatherWithCityAPI(city).then(response => {\r\n\t\t\t\t\tsuccess(response)\r\n\t\t\t  })\r\n\t\t\t: weatherAPI.getWeatherAPI(state.app.position.sco).then(response => {\r\n\t\t\t\t\tsuccess(response)\r\n\t\t\t  })\r\n\t}\r\n}\r\n\r\nexport const getForecast = (resolve, days, city = null) => {\r\n\treturn async (dispatch, getState) => {\r\n\t\tconst state = getState()\r\n\t\tconst success = response => {\r\n\t\t\tif (resolve) {\r\n\t\t\t\tresolve(dispatch(setForecastSuccess(response.data)))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(setForecastSuccess(response.data))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcity\r\n\t\t\t? weatherAPI.getForecastWithCityAPI(city, days).then(response => {\r\n\t\t\t\t\tsuccess(response)\r\n\t\t\t  })\r\n\t\t\t: weatherAPI\r\n\t\t\t\t\t.getForecastAPI(state.app.position.sco, days)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tsuccess(response)\r\n\t\t\t\t\t})\r\n\t}\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default weatherReducer\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\n\r\nimport { positionAPI } from '../api/positionAPI'\r\nimport { weatherAPI } from '../api/weatherAPI'\r\nimport { days, months } from '../variables/dateVars'\r\nimport { getForecast, getWeather, setWeatherSuccess } from './weatherReducer'\r\n\r\n// ====================================================\r\n// Types\r\n\r\nconst SET_POSITION = 'SET_POSITION'\r\nconst SET_DATE = 'SET_DATE'\r\nconst SET_SEARCHING = 'SET_SEARCHING'\r\nconst SET_ACTIVE_DAY = 'SET_ACTIVE_DAY'\r\nconst SET_INITIALIZED = 'SET_INITIALIZED'\r\nconst SET_SCO = 'SET_SCO'\r\nconst SET_CITY = 'SET_CITY'\r\n\r\n// ====================================================\r\n// Initial state\r\n\r\nlet initialState = {\r\n\tposition: {\r\n\t\taddress: {},\r\n\t\tsco: {\r\n\t\t\tlon: null,\r\n\t\t\tlat: null,\r\n\t\t},\r\n\t\tcity: null,\r\n\t},\r\n\tdate: {\r\n\t\tyear: null,\r\n\t\tmonth: null,\r\n\t\tday: null,\r\n\t\tdaysInMonth: null,\r\n\t},\r\n\tinitialized: false,\r\n\tsearching: false,\r\n}\r\n\r\n// ====================================================\r\n// Reducer\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_POSITION:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposition: {\r\n\t\t\t\t\t...state.position,\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tcase SET_DATE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdate: {\r\n\t\t\t\t\t...action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tcase SET_INITIALIZED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: action.payload,\r\n\t\t\t}\r\n\r\n\t\tcase SET_SEARCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsearching: action.payload,\r\n\t\t\t}\r\n\r\n\t\tcase SET_SCO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposition: {\r\n\t\t\t\t\t...state.position,\r\n\t\t\t\t\tsco: {\r\n\t\t\t\t\t\tlon: action.payload.lon,\r\n\t\t\t\t\t\tlat: action.payload.lat,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tcase SET_CITY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposition: {\r\n\t\t\t\t\t...state.position,\r\n\r\n\t\t\t\t\tcity: action.payload,\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// ====================================================\r\n// Action creators\r\n\r\nexport const setPositionSuccess = payload => ({ type: SET_POSITION, payload })\r\nexport const setDateSuccess = payload => ({ type: SET_DATE, payload })\r\nexport const setSco = payload => ({ type: SET_SCO, payload })\r\nexport const setCity = payload => ({ type: SET_CITY, payload })\r\nexport const setInitialized = payload => ({ type: SET_INITIALIZED, payload })\r\nexport const setSearching = payload => ({ type: SET_SEARCHING, payload })\r\n\r\n// ====================================================\r\n// Thunks\r\n\r\nexport const getPosition = (resolve, city = null) => {\r\n\treturn async dispatch => {\r\n\t\tnavigator.geolocation.getCurrentPosition(function (position) {\r\n\t\t\tlet scoForApi\r\n\t\t\tlet positionForApi\r\n\r\n\t\t\tif (!city) {\r\n\t\t\t\tpositionForApi = `${position.coords.longitude},${position.coords.latitude}`\r\n\t\t\t\tscoForApi = {\r\n\t\t\t\t\tlon: position.coords.longitude,\r\n\t\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpositionForApi = city\r\n\t\t\t}\r\n\r\n\t\t\tpositionAPI\r\n\t\t\t\t.getAddress(positionForApi)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tlet address =\r\n\t\t\t\t\t\tresponse.data.response.GeoObjectCollection.featureMember[0]\r\n\t\t\t\t\t\t\t.GeoObject.metaDataProperty.GeocoderMetaData.Address.Components\r\n\r\n\t\t\t\t\treturn { address }\r\n\t\t\t\t})\r\n\t\t\t\t.then(address => {\r\n\t\t\t\t\tdispatch(setPositionSuccess(address))\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (resolve && scoForApi) {\r\n\t\t\t\t\t\tresolve(dispatch(setSco(scoForApi)))\r\n\t\t\t\t\t} else if (scoForApi) {\r\n\t\t\t\t\t\tdispatch(setSco(scoForApi))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport const getDate = resolve => {\r\n\treturn async dispatch => {\r\n\t\tlet d = new Date()\r\n\t\tlet day = days[d.getDay() - 1]\r\n\t\tlet date = d.getDate()\r\n\t\tlet month = months[d.getMonth()]\r\n\t\tlet year = d.getFullYear()\r\n\t\tlet daysInMonth = new Date(year, d.getMonth(), 0).getDate()\r\n\r\n\t\tresolve\r\n\t\t\t? resolve(\r\n\t\t\t\t\tdispatch(setDateSuccess({ year, month, date, day, daysInMonth }))\r\n\t\t\t  )\r\n\t\t\t: dispatch(setDateSuccess({ year, month, date, day, daysInMonth }))\r\n\t}\r\n}\r\n\r\nexport const getInf = (city = null) => {\r\n\treturn async dispatch => {\r\n\t\tnew Promise((resolve, reject) => {\r\n\t\t\tdispatch(getPosition(resolve, city))\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tdispatch(getWeather(resolve, city))\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tdispatch(getForecast(resolve, 16, city))\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tdispatch(getDate(resolve))\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch(setSearching(false))\r\n\t\t\t\tdispatch(setInitialized(true))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default appReducer\r\n","// ====================================================\r\n// IMPORTS\r\nimport { connect } from 'react-redux'\r\nimport Search from './search'\r\nimport { getInf, setSearching } from '../../../bll/appReducer'\r\n\r\n// ====================================================\r\n// MSTP & MDTP\r\n\r\nlet mapStateToProps = state => ({})\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default connect(mapStateToProps, { getInf, setSearching })(Search)\r\n","// ====================================================\r\n// IMPORTS\r\nimport styles from './header.module.scss'\r\nimport Logo from '../logo/logo'\r\nimport Search from './search/searchContainer'\r\nimport React from 'react'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Header = () => {\r\n\t// JSX\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className={styles.inner}>\r\n\t\t\t\t\t<Logo displayNone={true} />\r\n\r\n\t\t\t\t\t<ul className={styles.menu}>\r\n\t\t\t\t\t\t<li className={styles.searchWrap}>\r\n\t\t\t\t\t\t\t<Search />\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref=\"https://github.com/z-a-h-a-r\"\r\n\t\t\t\t\t\t\t\tclassName={styles.link}\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMy GitHub\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref=\"https://openweathermap.org/\"\r\n\t\t\t\t\t\t\t\tclassName={styles.link}\r\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tWeather API\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Header)\r\n","// ====================================================\r\n// IMPORTS\r\nimport React from 'react'\r\nimport styles from './footer.module.scss'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Footer = () => {\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.footer}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className={styles.body}>\r\n\t\t\t\t\t<div className={[styles.techInfo, styles.column].join('')}>\r\n\t\t\t\t\t\t<p>Main</p>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/z-a-h-a-r/weatherSite\"\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tProject Code\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://github.com/z-a-h-a-r\"\r\n\t\t\t\t\t\t\t\t\tclassName={styles.menu__link}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tMy GitHub\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={[styles.apis, styles.column].join('')}>\r\n\t\t\t\t\t\t<p>API</p>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://openweathermap.org/\"\r\n\t\t\t\t\t\t\t\t\tclassName={styles.menu__link}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tWeather API\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\thref=\"https://yandex.ru/dev/maps/geocoder/\"\r\n\t\t\t\t\t\t\t\t\tclassName={styles.menu__link}\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tGeocoder API\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={[styles.contacs, styles.column].join('')}>\r\n\t\t\t\t\t\t<p>Contacs</p>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>usfuld@gmail.com</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\thref=\"https://www.instagram.com/z_a_h_a_r_74/\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tinstagram\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://vk.com/idzaharip\">\r\n\t\t\t\t\t\t\t\t\tvkontakte\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://t.me/z_a_h_a_r_74/\">\r\n\t\t\t\t\t\t\t\t\ttelegram\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Footer)\r\n","// ====================================================\r\n// IMPORTS\r\nimport React from 'react'\r\nimport styles from './card.module.scss'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Card = props => {\r\n\treturn <div className={styles.body}>{props.content}</div>\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Card)\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\nimport React, { useEffect, useState } from 'react'\r\nimport Card from './card/card'\r\nimport styles from './mainInfo.module.scss'\r\nimport * as queryString from 'querystring'\r\nimport { useHistory } from 'react-router'\r\nimport { useRef } from 'react'\r\nimport { days, months } from '../../../variables/dateVars'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst MainInfo = props => {\r\n\t// Variables\r\n\tconst history = useHistory()\r\n\tlet [parsedUrl, setParsedUrl] = useState(\r\n\t\tqueryString.parse(history.location.search.substr(1))\r\n\t)\r\n\tlet [isToday, setIsToday] = useState(true)\r\n\tlet currentDay = useRef(null)\r\n\tlet currentDate = useRef(null)\r\n\tlet currentMonth = useRef(null)\r\n\tlet currentYear = useRef(null)\r\n\r\n\t// ====================================================\r\n\t// Side effects\r\n\tuseEffect(() => {\r\n\t\tsetParsedUrl(queryString.parse(history.location.search.substr(1)))\r\n\t\tif (queryString.parse(history.location.search.substr(1)).day == 0) {\r\n\t\t\tsetIsToday((isToday = true))\r\n\t\t} else {\r\n\t\t\tsetIsToday((isToday = false))\r\n\t\t}\r\n\t}, [props.location.search])\r\n\r\n\t// ====================================================\r\n\t// Logic\r\n\t// Ddit current date\r\n\tif (+days.indexOf(props.date.day, 0) + +parsedUrl.day < 7) {\r\n\t\tcurrentDay.current = +days.indexOf(props.date.day, 0) + +parsedUrl.day\r\n\t} else {\r\n\t\tlet i = +days.indexOf(props.date.day, 0) + +parsedUrl.day\r\n\t\twhile (i > 6) {\r\n\t\t\ti -= 7\r\n\t\t}\r\n\t\tcurrentDay.current = i\r\n\t}\r\n\tif (+props.date.date + +parsedUrl.day <= props.date.daysInMonth) {\r\n\t\tcurrentDate.current = +props.date.date + +parsedUrl.day\r\n\t\tcurrentMonth.current = props.date.month\r\n\t\tcurrentYear.current = props.date.year\r\n\t} else {\r\n\t\tcurrentDate.current =\r\n\t\t\t+props.date.date + +parsedUrl.day - props.date.daysInMonth\r\n\t\tcurrentMonth.current = months[months.indexOf(props.date.month, 0) + 1]\r\n\t\tcurrentYear.current = props.date.year + 1\r\n\t}\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.body}>\r\n\t\t\t<p className={styles.position}>\r\n\t\t\t\tWeather in\r\n\t\t\t\t{props.city ? (\r\n\t\t\t\t\t' ' + props.city\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{props.address[0] ? ' ' + props.address[0].name : ''}\r\n\t\t\t\t\t\t{props.address[2] ? ', ' + props.address[2].name : ''}\r\n\t\t\t\t\t\t{props.address[3] ? ', ' + props.address[3].name : ''}\r\n\t\t\t\t\t\t{props.address[4] ? ', ' + props.address[4].name : ''}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</p>\r\n\t\t\t<p className={styles.time}>\r\n\t\t\t\t{parsedUrl.day == 0 ? 'Today' : days[currentDay.current]}\r\n\t\t\t\t{`, ${currentDate.current}`}\r\n\t\t\t\t{`, ${currentMonth.current}`}\r\n\t\t\t\t{`, ${currentYear.current}`}\r\n\t\t\t</p>\r\n\t\t\t<div className={styles.tempWrap}>\r\n\t\t\t\t<p className={styles.temp}>\r\n\t\t\t\t\t{Math.round(\r\n\t\t\t\t\t\tisToday\r\n\t\t\t\t\t\t\t? props.weather.main.temp\r\n\t\t\t\t\t\t\t: props.forecast.list[+parsedUrl.day - 1].temp.day\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t°c\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.feelsLike}>\r\n\t\t\t\t\t<p className={styles.feelsLikeTemp}>\r\n\t\t\t\t\t\t{Math.round(\r\n\t\t\t\t\t\t\tisToday\r\n\t\t\t\t\t\t\t\t? props.weather.main.feels_like\r\n\t\t\t\t\t\t\t\t: props.forecast.list[+parsedUrl.day - 1].feels_like.day\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t°\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className={styles.feelsLikeTitle}>Feels Like</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.line}></div>\r\n\r\n\t\t\t{isToday ? (\r\n\t\t\t\t<div className={styles.cards}>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={props.weather.weather[0].description}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Wind speed: ${Math.round(props.weather.wind.speed)} m/s`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Max temp: ${props.weather.main.temp_max}°c`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Min temp: ${props.weather.main.temp_min}°c`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Pressure: ${props.weather.main.pressure} mmHg`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Рumidity: ${props.weather.main.humidity}%`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div className={styles.cards}>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].weather[0].description\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Wind speed: ${Math.round(\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].speed\r\n\t\t\t\t\t\t)} m/s`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Max temp: ${\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].temp.max\r\n\t\t\t\t\t\t}°c`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Min temp: ${\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].temp.min\r\n\t\t\t\t\t\t}°c`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Pressure: ${\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].pressure\r\n\t\t\t\t\t\t} mmHg`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tcontent={`Рumidity: ${\r\n\t\t\t\t\t\t\tprops.forecast.list[+parsedUrl.day - 1].humidity\r\n\t\t\t\t\t\t}%`}\r\n\t\t\t\t\t\tkey={window.location.pathname}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(MainInfo)\r\n","// ====================================================\r\n// IMPORTS\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { compose } from 'redux'\r\nimport MainInfo from './mainInfo'\r\n\r\n// ====================================================\r\n// MSTP & MDTP\r\n\r\nlet mapStateToProps = state => ({\r\n\tdate: state.app.date,\r\n\taddress: state.app.position.address,\r\n\tcity: state.app.position.city,\r\n\tweather: state.weather.today,\r\n\tforecast: state.weather.forecast,\r\n})\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {}))(MainInfo)\r\n","export const selectWeatherIcon = icon => {\r\n\tswitch (icon) {\r\n\t\tcase '01d':\r\n\t\t\treturn `../images/day/sunset.png`\r\n\r\n\t\tcase '02d':\r\n\t\t\treturn `../images/day/warm-weather.png`\r\n\r\n\t\tcase '03d':\r\n\t\t\treturn `../images/common/cloud.png`\r\n\r\n\t\tcase '04d':\r\n\t\t\treturn `../images/common/clouds.png`\r\n\r\n\t\tcase '09d':\r\n\t\t\treturn `../images/common/rain.png`\r\n\r\n\t\tcase '10d':\r\n\t\t\treturn `../images/day/cloud-drizzel.png`\r\n\r\n\t\tcase '11d':\r\n\t\t\treturn `../images/common/storm-weather.png`\r\n\r\n\t\tcase '13d':\r\n\t\t\treturn `../images/common/snow.png`\r\n\r\n\t\tcase '50d':\r\n\t\t\treturn `../images/common/mist.png`\r\n\r\n\t\tcase '01n':\r\n\t\t\treturn `../images/night/moon.png`\r\n\r\n\t\tcase '02n':\r\n\t\t\treturn `../images/night/moon-clouds.png`\r\n\r\n\t\tcase '03n':\r\n\t\t\treturn `../images/common/cloud.png`\r\n\r\n\t\tcase '04n':\r\n\t\t\treturn `../images/common/clouds.png`\r\n\r\n\t\tcase '09n':\r\n\t\t\treturn `../images/common/rain.png`\r\n\r\n\t\tcase '10n':\r\n\t\t\treturn `../images/night/rainy-weather.png`\r\n\r\n\t\tcase '11n':\r\n\t\t\treturn `../images/common/storm-weather.png`\r\n\r\n\t\tcase '13n':\r\n\t\t\treturn `../images/common/snow.png`\r\n\r\n\t\tcase '50n':\r\n\t\t\treturn `../images/common/mist.png`\r\n\r\n\t\tdefault:\r\n\t\t\treturn 'icon not defined'\r\n\t}\r\n}\r\n","// ====================================================\r\n// IMPORTS\r\nimport styles from './weatherImage.module.scss'\r\nimport { selectWeatherIcon } from '../../../functions/selectWeatherIcon'\r\nimport * as queryString from 'querystring'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect, useState } from 'react'\r\nimport React from 'react'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst WeatherImage = props => {\r\n\t// Variables\r\n\tlet history = useHistory()\r\n\tlet path\r\n\tlet [parsedUrl, setParsedUrl] = useState(\r\n\t\tqueryString.parse(history.location.search.substr(1))\r\n\t)\r\n\r\n\t// ====================================================\r\n\t// Side effects\r\n\tuseEffect(() => {\r\n\t\tsetParsedUrl(queryString.parse(history.location.search.substr(1)))\r\n\t}, [props.location.search])\r\n\r\n\t// ====================================================\r\n\t// Logic\r\n\tif (+parsedUrl.day == 0) {\r\n\t\tpath = '/' + selectWeatherIcon(props.icon)\r\n\t} else {\r\n\t\tpath =\r\n\t\t\t'/' + selectWeatherIcon(props.list[+parsedUrl.day - 1].weather[0].icon)\r\n\t}\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.body}>\r\n\t\t\t<div className={styles.image}>\r\n\t\t\t\t<img src={`${path}`} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(WeatherImage)\r\n","// ====================================================\r\n// IMPORTS\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { compose } from 'redux'\r\nimport WeatherImage from './weatherImage'\r\n\r\n// ====================================================\r\n// MSTP & MDTP\r\n\r\nlet mapStateToProps = state => ({\r\n\ticon: state.weather.today.weather[0].icon,\r\n\tlist: state.weather.forecast.list,\r\n})\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, {}))(WeatherImage)\r\n","// ====================================================\r\n// IMPORTS\r\n// Main\r\nimport { NavLink } from 'react-router-dom'\r\nimport { selectWeatherIcon } from '../../../../functions/selectWeatherIcon'\r\nimport styles from './card.module.scss'\r\nimport * as queryString from 'querystring'\r\nimport { useHistory } from 'react-router'\r\nimport React from 'react'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Card = props => {\r\n\t// Variables\r\n\tconst history = useHistory()\r\n\tconst parsedUrl = queryString.parse(history.location.search.substr(1))\r\n\tconst path = '/' + selectWeatherIcon(props.weather.weather[0].icon)\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\treturn (\r\n\t\t<NavLink\r\n\t\t\tto={`/?day=${props.id}${parsedUrl.city ? '&city=' + parsedUrl.city : ''}`}\r\n\t\t>\r\n\t\t\t<div className={styles.body}>\r\n\t\t\t\t<p className={styles.temp}>{Math.round(props.weather.temp.day)}°c</p>\r\n\t\t\t\t<p className={styles.date}>\r\n\t\t\t\t\t{props.day}, {props.date}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={styles.image}>\r\n\t\t\t\t\t<img src={`${path}`} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</NavLink>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Card)\r\n","// ====================================================\r\n// IMPORTS\r\nimport styles from './forecast.module.scss'\r\nimport Card from './card/card'\r\nimport Slider from 'react-slick'\r\nimport { days } from '../../../variables/dateVars'\r\nimport { useRef } from 'react'\r\nimport React from 'react'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst sliderSettings = {\r\n\tarrows: false,\r\n\tinfinite: false,\r\n\tspeed: 400,\r\n\tslidesToShow: 6,\r\n\tslidesToScroll: 2,\r\n\tdots: true,\r\n\tresponsive: [\r\n\t\t{\r\n\t\t\tbreakpoint: 1200,\r\n\t\t\tsettings: {\r\n\t\t\t\tslidesToShow: 5,\r\n\t\t\t\tslidesToScroll: 2,\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\tbreakpoint: 991,\r\n\t\t\tsettings: {\r\n\t\t\t\tslidesToShow: 4,\r\n\t\t\t\tslidesToScroll: 2,\r\n\t\t\t\tdots: false,\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\tbreakpoint: 417,\r\n\t\t\tsettings: {\r\n\t\t\t\tslidesToShow: 3,\r\n\t\t\t\tdots: false,\r\n\t\t\t\tslidesToScroll: 1,\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n}\r\n\r\nconst Forecast = props => {\r\n\t// Variables\r\n\tconst nextDay = useRef(null)\r\n\tconst nextDate = useRef(null)\r\n\tconst dayId = useRef(null)\r\n\tconst wasFirstRender = useRef(false)\r\n\tconst propsForFirstCard = {\r\n\t\ttemp: {\r\n\t\t\tday: props.weatherToday.main.temp,\r\n\t\t},\r\n\t\tweather: [{ icon: props.weatherToday.weather[0].icon }],\r\n\t}\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.body}>\r\n\t\t\t<Slider {...sliderSettings}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tweather={propsForFirstCard}\r\n\t\t\t\t\t\tday={'Today'}\r\n\t\t\t\t\t\tid={0}\r\n\t\t\t\t\t\taddress={props.address}\r\n\t\t\t\t\t\tdate={props.date.date}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{props.forecast.map(weather => {\r\n\t\t\t\t\tif (!wasFirstRender.current) {\r\n\t\t\t\t\t\twasFirstRender.current = true\r\n\t\t\t\t\t\tnextDay.current = days.indexOf(props.date.day, 0) + 1\r\n\t\t\t\t\t\tnextDate.current = props.date.date + 1\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnextDay.current += 1\r\n\r\n\t\t\t\t\t\tif (nextDate.current + 1 <= props.date.daysInMonth) {\r\n\t\t\t\t\t\t\tnextDate.current += 1\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnextDate.current = nextDate.current + 1 - props.date.daysInMonth\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (nextDay.current === 7) {\r\n\t\t\t\t\t\tnextDay.current = 0\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dayId.current === 16) {\r\n\t\t\t\t\t\tdayId.current = 1\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdayId.current += 1\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={weather.id}>\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tweather={weather}\r\n\t\t\t\t\t\t\t\tday={days[nextDay.current]}\r\n\t\t\t\t\t\t\t\tid={dayId.current}\r\n\t\t\t\t\t\t\t\taddress={props.address}\r\n\t\t\t\t\t\t\t\tdate={nextDate.current}\r\n\t\t\t\t\t\t\t\tkey={nextDate.current}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</Slider>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Forecast)\r\n","// ====================================================\r\n// IMPORTS\r\nimport { connect } from 'react-redux'\r\nimport Forecast from './forecast'\r\n\r\n// ====================================================\r\n// MSTP & MDTP\r\n\r\nlet mapStateToProps = state => ({\r\n\tforecast: state.weather.forecast.list,\r\n\tdate: state.app.date,\r\n\taddress: state.app.position.address,\r\n\tweatherToday: state.weather.today,\r\n})\r\n\r\n// ====================================================\r\n// Export\r\n\r\nexport default connect(mapStateToProps, {})(Forecast)\r\n","// ====================================================\r\n// IMPORTS\r\nimport React from 'react'\r\nimport styles from './loading.module.scss'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst Loading = () => {\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.body}>\r\n\t\t\t<div className={styles.ldsRoller}>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(Loading)\r\n","// ====================================================\r\n// IMPORTS\r\nimport styles from './mainPage.module.scss'\r\nimport Header from '../../components/header/header'\r\nimport Footer from '../../components/footer/footer'\r\nimport MainInfo from './mainInfo/mainInfo.container'\r\nimport WeatherImage from './weatherImage/weatherImageContainer'\r\nimport Forecast from './forecast/forecastContainer'\r\nimport classNames from 'classnames'\r\nimport Loading from '../../components/loading/loading'\r\nimport React from 'react'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst MainPage = props => {\r\n\t// JSX\r\n\treturn (\r\n\t\t<div className={styles.body}>\r\n\t\t\t<img src=\"/images/backgrounds/1.png\" className={styles.background} />\r\n\t\t\t<div className={styles.content}>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t{props.searching ? (\r\n\t\t\t\t\t\t<div className={styles.wrapperForLoading}>\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className={classNames('row', styles.body)}>\r\n\t\t\t\t\t\t\t<div className={classNames('col-md', styles.left)}>\r\n\t\t\t\t\t\t\t\t<MainInfo key={window.location.pathname} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classNames('col-md', styles.right)}>\r\n\t\t\t\t\t\t\t\t<WeatherImage />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Forecast />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default React.memo(MainPage)\r\n","// ====================================================\r\n// IMPORTS\r\nimport { connect } from 'react-redux'\r\nimport MainPage from './mainPage'\r\n\r\n// ====================================================\r\n// MSTP & MDTP\r\n\r\nlet mapStateToProps = state => ({\r\n\tdate: state.app.date,\r\n\tposition: state.app.position,\r\n\ttodayWeather: state.weather.today,\r\n\tsearching: state.app.searching,\r\n})\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default connect(mapStateToProps, {})(MainPage)\r\n","// ====================================================\r\n// IMPORTS\r\nimport './styles/zeroing.scss'\r\nimport './styles/style.scss'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport MainPage from './pages/mainPage/mainPage.container'\r\nimport Loading from './components/loading/loading'\r\nimport { Route } from 'react-router-dom'\r\nimport { useHistory } from 'react-router'\r\nimport React, { useEffect } from 'react'\r\nimport { getInf } from './bll/appReducer'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport * as queryString from 'querystring'\r\n\r\n// ====================================================\r\n// Component\r\n\r\nconst App = props => {\r\n\t// Variables\r\n\tconst history = useHistory()\r\n\r\n\t// ====================================================\r\n\t// Side effects\r\n\tuseEffect(() => {\r\n\t\tconst parsedUrl = queryString.parse(history.location.search.substr(1))\r\n\r\n\t\tif (\r\n\t\t\tparsedUrl.day != '0' &&\r\n\t\t\tparsedUrl.day != '1' &&\r\n\t\t\tparsedUrl.day != '2' &&\r\n\t\t\tparsedUrl.day != '3' &&\r\n\t\t\tparsedUrl.day != '4' &&\r\n\t\t\tparsedUrl.day != '5' &&\r\n\t\t\tparsedUrl.day != '6' &&\r\n\t\t\tparsedUrl.day != '7' &&\r\n\t\t\tparsedUrl.day != '8' &&\r\n\t\t\tparsedUrl.day != '9' &&\r\n\t\t\tparsedUrl.day != '10' &&\r\n\t\t\tparsedUrl.day != '11' &&\r\n\t\t\tparsedUrl.day != '12' &&\r\n\t\t\tparsedUrl.day != '13' &&\r\n\t\t\tparsedUrl.day != '14' &&\r\n\t\t\tparsedUrl.day != '15' &&\r\n\t\t\tparsedUrl.day != '16'\r\n\t\t) {\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: '',\r\n\t\t\t\tsearch: `day=0`,\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (parsedUrl.city) {\r\n\t\t\tprops.getInf(parsedUrl.city.replace(/[^a-zа-яё0-9 ]/gi, '').trim())\r\n\t\t} else {\r\n\t\t\tprops.getInf()\r\n\t\t}\r\n\t}, [])\r\n\r\n\t// ====================================================\r\n\t// JSX\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.initialized === false ? (\r\n\t\t\t\t<Loading />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Route path=\"/\" render={() => <MainPage />} />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nlet mapStateToProps = state => ({\r\n\tinitialized: state.app.initialized,\r\n})\r\nexport default React.memo(compose(connect(mapStateToProps, { getInf }))(App))\r\n","// ====================================================\r\n// Imports\r\n// Main\r\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport appReducer from './appReducer'\r\nimport weatherReducer from './weatherReducer'\r\n\r\n// ====================================================\r\n// CombineReducers\r\n\r\nlet reducers = combineReducers({\r\n\tweather: weatherReducer,\r\n\tapp: appReducer,\r\n})\r\n\r\n// ====================================================\r\n// Store\r\n\r\nlet store = createStore(\r\n\treducers,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n)\r\n\r\n// ====================================================\r\n// Exports\r\n\r\nexport default store\r\n","// ====================================================\r\n// IMPORTS\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport store from './bll/store'\r\n\r\n// ====================================================\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter basename=\"/\">\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1PtG5\",\"body\":\"footer_body__1ObPL\",\"column\":\"footer_column__1uvyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"mainInfo_body__1vFK3\",\"position\":\"mainInfo_position__2bvJC\",\"tempWrap\":\"mainInfo_tempWrap__3HiRs\",\"temp\":\"mainInfo_temp__2gh-s\",\"feelsLike\":\"mainInfo_feelsLike__BzRC7\",\"feelsLikeTemp\":\"mainInfo_feelsLikeTemp__13tcq\",\"feelsLikeTitle\":\"mainInfo_feelsLikeTitle__2s6Sw\",\"time\":\"mainInfo_time__2_Uui\",\"line\":\"mainInfo_line__XVRhn\",\"cards\":\"mainInfo_cards__2EqKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"mainPage_body__1lOej\",\"background\":\"mainPage_background__lsgLt\",\"content\":\"mainPage_content__19RXw\",\"wrapperForLoading\":\"mainPage_wrapperForLoading__3nOuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3bI2G\",\"inner\":\"header_inner__3_v_F\",\"menu\":\"header_menu__25KJP\",\"link\":\"header_link__2MbVl\",\"searchWrap\":\"header_searchWrap__10zo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"search_form__2hryI\",\"input\":\"search_input__cjbU3\",\"button\":\"search_button__pC8LW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"card_body__16hRA\",\"temp\":\"card_temp__3LFrp\",\"date\":\"card_date__2skFm\",\"image\":\"card_image__1854k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"logo_body__31964\",\"media\":\"logo_media__uRk8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"weatherImage_body__2baul\",\"image\":\"weatherImage_image__3y2dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRoller\":\"loading_ldsRoller__2kdlT\",\"body\":\"loading_body__1Kqtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"card_body__1u90W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"forecast_body__2MlHu\"};"],"sourceRoot":""}